from flask import Blueprint, render_template, request, session,redirect, current_app,abort, make_response,jsonify

lab7 = Blueprint('lab7', __name__)


@lab7.route("/lab7/")
def main():
    return render_template('lab7/index.html')

films = [
    {

        "title": "Interstellar",
        "title_ru": "Интерстеллар",
        "year": 2014,
        "description":"Когда засуха, пыльные бури и вымирание растений приводят человечество к \
        продовольственному кризису, коллектив исследователей и учёных отправляется сквозь червоточину \
        (которая предположительно соединяет области пространства-времени через большое расстояние) \
        в путешествие, чтобы превзойти прежние ограничения для космических путешествий человека \
        и найти планету с подходящими для человечества условиями."

    },


     {

        "title": "The Green Mile",
        "title_ru": "Зеленая миля",
        "year": 1999,
        "description":"Пол Эджкомб — начальник блока смертников в тюрьме «Холодная гора», \
        каждый из узников которого однажды проходит «зеленую милю» по пути к месту казни. \
        Пол повидал много заключённых и надзирателей за время работы. Однако гигант Джон Коффи, \
        обвинённый в страшном преступлении, стал одним из самых необычных обитателей блока."

    },

     {

        "title": "The Shawshank Redemption",
        "title_ru": "Побег из Шоушенка",
        "year": 1994,
        "description":"Бухгалтер Энди Дюфрейн обвинён в убийстве собственной жены и её любовника. \
        Оказавшись в тюрьме под названием Шоушенк, он сталкивается с жестокостью и беззаконием, \
        царящими по обе стороны решётки. Каждый, кто попадает в эти стены, становится их \
        рабом до конца жизни. Но Энди, обладающий живым умом и доброй душой, находит \
        подход как к заключённым, так и к охранникам, добиваясь их особого к себе расположения."

    },

     {

        "title": "I Am Mother",
        "title_ru": "Дитя робота",
        "year": 2018,
        "description":"После глобального катаклизма человечество вымирает. В подземном бункере \
        автоматически активизируется аварийная программа, и робот-гуманоид «Мать» выращивает \
        из эмбриона человеческого ребенка. Девушка, воспитанная под бережным присмотром «Матери», \
        никогда не видела ни поверхности Земли, ни других людей. Но однажды её мир \
        переворачивается, когда на пороге убежища появляется женщина с просьбой о помощи."

    },


     {

        "title": "Archive",
        "title_ru": "Мой создатель",
        "year": 2020,
        "description":"2048 год. Молодой ученый Джордж, работающий на корпорацию в секретной \
        лаборатории где-то в японских лесах, занимается разработкой искусственного интеллекта, \
        попутно собирая инновационного робота, в который собирается загрузить сознание \
        погибшей жены. Пока её сознание находится в большом чёрном шкафу, \
        так называемом Архиве, но трёхлетний срок хранения подходит к концу, \
        поэтому Джордж торопится завершить свой проект."

    },
]


@lab7.route('/lab7/rest-api/films/', methods=['GET'])
def get_films():
    return jsonify(films) # Возвращает список фильмов в формате JSON


@lab7.route('/lab7/rest-api/films/<int:id>', methods=['GET'])
def get_film(id):
    if id < 0 or id >= len(films):
        abort(404)
    return films [id]

@lab7.route('/lab7/rest-api/films/<int:id>', methods=['DELETE'])
def gel_film(id):
    if id < 0 or id >= len(films):
        abort(404)
    del films[id] # Удаляет фильм с указанным ID из списка
    return '',204 # Возвращает пустой ответ с HTTP-статусом 204 (успешно, без содержимого)

@lab7.route('/lab7/rest-api/films/<int:id>', methods=['PUT'])
def put_film(id):
    if id < 0 or id >= len(films):
        abort(404)
    film = request.get_json() # Получение данных фильма из тела запроса в формате JSON
    if not film['title'] and film['title_ru']:
        film['title'] = film['title_ru']  # Если оригинальное название пустое, используем русское
    if not film['description']:
        return {'description': 'Заполните описание'}, 400
    films[id] = film
    return films[id]

@lab7.route('/lab7/rest-api/films/', methods=['POST'])
def add_film():
    film = request.get_json()
    if not film['title'] and film['title_ru']:
        film['title'] = film['title_ru']  # Если оригинальное название пустое, используем русское
    if not film['description']:
        return {'description': 'Заполните описание'}, 400
    new_id = len(films) # Генерация нового ID для добавляемого фильма (длина текущего списка фильмов)
    film["id"] = new_id 
    films.append(film)  # Добавление нового фильма в список
    return film # Возвращает добавленный фильм в формате JSON